<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>DataWeave</string>
    <key>scopeName</key>
    <string>source.data-weave</string>
    <key>fileTypes</key>
    <array>
      <string>dwl</string>
    </array>
    <key>uuid</key>
    <string>ba6390ae-c50f-4dce-97f1-951dab8fc607</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comments</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#directives</string>
      </dict>
      <dict>
        <key>match</key>
        <string>(---)</string>
        <key>name</key>
        <string>keyword.operator.body-marker.dw</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#expressions</string>
      </dict>
      <dict>
        <key>match</key>
        <string>([^\s]+)</string>
        <key>name</key>
        <string>invalid</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>directives</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#dw-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fun-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#var-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#ns-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#input-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#output-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotation-usage</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotation-directive</string>
          </dict>
        </array>
      </dict>
      <key>function_call</key>
      <dict>
        <key>name</key>
        <string>function_call</string>
        <key>begin</key>
        <string>\s*\(</string>
        <key>end</key>
        <string>\s*\)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>variable-reference</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>variable.other.dw</string>
            <key>match</key>
            <string>\b(?!(fun|input|output|type|var|ns|import|%dw|private|---)\b)((\+\+|\-\-|[A-Za-z])[a-zA-Z0-9_]*)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid</string>
            <key>match</key>
            <string>\b(fun|input|output|type|var|ns|import|private)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.parameter.dw</string>
            <key>match</key>
            <string>(\$+)</string>
          </dict>
        </array>
      </dict>
      <key>cast</key>
      <dict>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(as|is)\s+</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.as.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$|^|[;,:})\]\s])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
        </array>
      </dict>
      <key>case-clause</key>
      <dict>
        <key>name</key>
        <string>case-clause.expr.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(case|else(?=\s*-&gt;))\b(?!\$|\.)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.switch.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\-\&gt;</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.switch.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?&lt;!\.|\$)\b(is)\s+</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.is.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\-\&gt;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?&lt;!\.|\$)\b(matches)\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.matches.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\-\&gt;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?&lt;!\.|\$)\b([A-Za-z][a-zA-Z0-9_]*)\s*:\s+</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.variable.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\-\&gt;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?&lt;!\.|\$)\b([A-Za-z][a-zA-Z0-9_]*)\s*(if|matches)\s+</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.variable.dw</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.control.if.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\-\&gt;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.dw</string>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dw</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>\s*((//).*$\n?)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.dw</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dw</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>constants</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.language.dw</string>
            <key>match</key>
            <string>\b(true|false|null)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.dw</string>
            <key>match</key>
            <string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\|</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\|</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.dw</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.numeric.dw</string>
                <key>match</key>
                <string>([0-9]+)</string>
              </dict>
              <dict>
                <key>name</key>
                <string>constant.character.escape.dw</string>
                <key>match</key>
                <string>([+:\-WYMDTHSPZ\.])</string>
              </dict>
              <dict>
                <key>name</key>
                <string>invalid</string>
                <key>match</key>
                <string>([^\|])</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>dw-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.version.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)(%dw)\s+([0-9]\.[0-9])(?!\$|\.)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>comment.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>comment.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\n)</string>
      </dict>
      <key>infix</key>
      <dict>
        <key>name</key>
        <string>support.function.dw</string>
        <key>match</key>
        <string>(?&lt;!^|,|\[|\(|=|\+|&gt;|&lt;|\-|\*|:|\{|case|is|else|not|as|and|or)(?&lt;=[a-zA-Z0-9_$\}\])"'`|/])\s*(?!(var|match|case|else|fun|input|output|is|as|default|ns|import|null|false|true|using|do|not|and|or)\s)(\+\+|\-\-|[a-zA-Z][a-zA-Z_0-9]*)(\s+|\s*(?=["'/|{]))</string>
      </dict>
      <key>expressions</key>
      <dict>
        <key>name</key>
        <string>expression</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.dw</string>
            <key>match</key>
            <string>\b(not)\s+</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#paren-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#constants</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#match-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#using-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#do-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#if-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#array-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#cast</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-member</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-reference</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#selectors</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directives</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#infix</string>
          </dict>
        </array>
      </dict>
      <key>generics</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.declaration.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=,|&gt;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.extends.dw</string>
            <key>match</key>
            <string>&lt;:</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.name.type.parameter.dw</string>
            <key>match</key>
            <string>\w+</string>
          </dict>
        </array>
      </dict>
      <key>input-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.ns.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(input)\s+([[:alpha:]][[:alnum:]]*)\s*</string>
        <key>end</key>
        <string>(?=\n)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\:\s*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\s|\n)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>([^{\n\s])</string>
            <key>name</key>
            <string>string.mime.dw</string>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.reserved.dw</string>
            <key>match</key>
            <string>\b(throw|for|yield|enum|private|async)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid</string>
            <key>match</key>
            <string>\b(not)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.dw</string>
            <key>match</key>
            <string>\b(if|else|while|for|do|using|unless|default)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.comparison.dw</string>
            <key>match</key>
            <string>(~=|==|!=|!=|&lt;=|&gt;=|&lt;|&gt;)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.dw</string>
            <key>match</key>
            <string>(=)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.declaration.dw</string>
            <key>match</key>
            <string>(:)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.arithmetic.dw</string>
            <key>match</key>
            <string>(\-|\+|\*|\/)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.dw</string>
            <key>match</key>
            <string>\b(and|or)\b</string>
          </dict>
        </array>
      </dict>
      <key>match-block</key>
      <dict>
        <key>name</key>
        <string>match-block.expr.dw</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#case-clause</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>match-statement</key>
      <dict>
        <key>name</key>
        <string>match-statement.expr.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(match)\s*(?=\{)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.switch.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#match-block</string>
          </dict>
        </array>
      </dict>
      <key>using-statement</key>
      <dict>
        <key>name</key>
        <string>using-statement.expr.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(using)\s*(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.using.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definitions.begin.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definitions.end.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>((?:\+\+|\-\-|[A-Za-z])(?:[a-zA-Z0-9_]*))(\s*=)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.variable.dw</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.dw</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>do-statement</key>
      <dict>
        <key>name</key>
        <string>do-statement.expr.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(do)\s*(\{)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.do.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definitions.begin.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\})</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definitions.end.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directives</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(---)</string>
            <key>name</key>
            <string>keyword.operator.body-marker.dw</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([^\s]+)</string>
            <key>name</key>
            <string>invalid</string>
          </dict>
        </array>
      </dict>
      <key>if-statement</key>
      <dict>
        <key>name</key>
        <string>meta.if.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(if\s*)\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.if.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>ns-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.ns.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(ns)\s+([A-Za-z][a-zA-Z0-9_]*)\s+([^\n]*)(?!\$|\.)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.namespace.dw</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>meta.definition.ns.dw string.url.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\n)</string>
      </dict>
      <key>object-literal</key>
      <dict>
        <key>name</key>
        <string>meta.objectliteral.dw</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#object-member</string>
          </dict>
        </array>
      </dict>
      <key>attr-literal</key>
      <dict>
        <key>name</key>
        <string>meta.attributes.dw</string>
        <key>begin</key>
        <string>\@\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.attributes.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.attributes.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#object-member</string>
          </dict>
        </array>
      </dict>
      <key>selectors</key>
      <dict>
        <key>name</key>
        <string>meta.selector.data-weave</string>
        <key>begin</key>
        <string>(?&lt;![\[\(:+*/\-])(\s*\.\.\*|\s*\.\.|\s*\.\*|\s*\.\@|\s*\.#|\s*\.&amp;|\s*\.|(?=\[)|\:\:)</string>
        <key>end</key>
        <string>(?=\s|,|\}|\)|\n|\]|\(|-|$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.object.member.dw</string>
            <key>match</key>
            <string>\b([[:alpha:]][_[:alnum:]]+#)</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>variable.language.dw</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>((?:[A-Za-z])([a-zA-Z0-9_]*)[?!]?|(\$)+)</string>
            <key>name</key>
            <string>meta.object.member.dw</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\[(@|\^)?)</string>
            <key>end</key>
            <string>(\])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
              <dict>
                <key>match</key>
                <string>([\)])</string>
                <key>name</key>
                <string>invalid</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#selectors</string>
          </dict>
        </array>
      </dict>
      <key>object-key</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.object.member.dw meta.object-literal.namespace.dw</string>
            <key>match</key>
            <string>\b([[:alpha:]][_[:alnum:]]+#)</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>variable.language.dw</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.dw meta.object-literal.key.dw</string>
            <key>begin</key>
            <string>(?=[\'\"\`])</string>
            <key>end</key>
            <string>(?=@\(|:)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#strings</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.dw</string>
            <key>end</key>
            <string>(?=,|\}|\))</string>
            <key>match</key>
            <string>(?:[_$[:alpha:]][_$[:alnum:]]*)\s*(?=:|@\()</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.object-literal.key.dw</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>object-member</key>
      <dict>
        <key>name</key>
        <string>meta.object.member.first.dw</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#paren-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-key</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#attr-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-member-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>object-member-body</key>
      <dict>
        <key>name</key>
        <string>meta.object.member.dw</string>
        <key>begin</key>
        <string>:</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.object-literal.key.dw punctuation.separator.key-value.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=,|\}|\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>output-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.ns.dw</string>
        <key>begin</key>
        <string>(?&lt;!\.|\$)\b(output)\s+([^\n{\s]*)(?!\$|\.)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>string.other.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\n)</string>
      </dict>
      <key>parameters</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.declaration.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=,|\)|=)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(=)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.declaration.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=,|\))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.parameter.dw</string>
            <key>match</key>
            <string>\w+</string>
          </dict>
        </array>
      </dict>
      <key>paren-expression</key>
      <dict>
        <key>begin</key>
        <string>(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.expression.begin.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.expression.end.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>punctuation-comma</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.comma.dw</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>strings</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#qstring-single</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#qstring-double</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#qstring-backtick</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#template</string>
          </dict>
        </array>
      </dict>
      <key>qstring-backtick</key>
      <dict>
        <key>begin</key>
        <string>`</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.dw punctuation.definition.string.begin.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>`</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.dw punctuation.definition.string.end.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#template-substitution-element</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#template-dollar</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([^`])</string>
            <key>name</key>
            <string>string.template.dw</string>
          </dict>
        </array>
      </dict>
      <key>template</key>
      <dict>
        <key>begin</key>
        <string>([$[:alpha:]][_$[:alnum:]]*)\s*(`)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.function.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>string.template.dw punctuation.definition.string.template.begin.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>`</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.template.dw punctuation.definition.string.template.end.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#template-substitution-element</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#template-dollar</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([^`])</string>
            <key>name</key>
            <string>string.template.dw</string>
          </dict>
        </array>
      </dict>
      <key>string-character-escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.dw</string>
        <key>match</key>
        <string>\\(u\h{4}|$|.)</string>
      </dict>
      <key>qstring-double</key>
      <dict>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.dw punctuation.definition.string.begin.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>"</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.dw punctuation.definition.string.end.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#template-substitution-element</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#template-dollar</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([^"])</string>
            <key>name</key>
            <string>string.quoted.double.dw</string>
          </dict>
        </array>
      </dict>
      <key>qstring-single</key>
      <dict>
        <key>begin</key>
        <string>'</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>string.quoted.single.dw punctuation.definition.string.begin.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\')|((?:[^\\\n])$)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.single.dw punctuation.definition.string.end.dw</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#template-substitution-element</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#template-dollar</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([^'])</string>
            <key>name</key>
            <string>string.quoted.single.dw</string>
          </dict>
        </array>
      </dict>
      <key>template-dollar</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\$(\$)+)</string>
            <key>name</key>
            <string>variable.parameter.dw</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\$)(?![a-zA-Z(])</string>
            <key>name</key>
            <string>variable.parameter.dw</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\$)([a-zA-Z][a-zA-Z0-9_]*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.dw</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.other.dw</string>
              </dict>
            </dict>
            <key>name</key>
            <string>variable.parameter.dw</string>
          </dict>
        </array>
      </dict>
      <key>template-substitution-element</key>
      <dict>
        <key>name</key>
        <string>meta.template.expression.dw</string>
        <key>begin</key>
        <string>\$\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.other.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>types</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.class.dw</string>
            <key>match</key>
            <string>\b(String|Boolean|Number|Range|Namespace|Uri|DateTime|LocalDateTime|Date|LocalTime|Time|TimeZone|Period|Binary|Null|Regex|Nothing|Any|Object|Key)\b</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\b(Array|Type)\s*&lt;\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.type.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>&gt;</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>,</string>
                <key>name</key>
                <string>invalid</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.declaration.dw</string>
            <key>match</key>
            <string>(&amp;|\|)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.declaration.dw</string>
            <key>match</key>
            <string>&lt;:</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.class.dw</string>
            <key>match</key>
            <string>\b([A-Z][a-zA-Z0-9_]*)</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>&lt;</string>
            <key>end</key>
            <string>&gt;</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.tuple.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\)\s*\-\&gt;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#parameters</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\{\-\|</string>
            <key>end</key>
            <string>\|\-\}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#object-member-type</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\{\|</string>
            <key>end</key>
            <string>\|\}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#object-member-type</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\{\-</string>
            <key>end</key>
            <string>\-\}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#object-member-type</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>end</key>
            <string>\}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#object-member-type</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.grouping.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(var|fun|ns)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid</string>
            <key>match</key>
            <string>\b(input|output|var|ns|import|try|catch|throw|do|for|yield|enum|private|async)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid</string>
            <key>match</key>
            <string>\b(if|else|while|for|do|using|unless|default|match)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid</string>
            <key>match</key>
            <string>(~=|==|!=|===|!==|&lt;=|&gt;=|&lt;|&gt;|\$+)</string>
          </dict>
        </array>
      </dict>
      <key>object-member-type</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>match</key>
            <string>_</string>
            <key>name</key>
            <string>variable.language.dw</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([a-zA-Z0-9]+#)</string>
            <key>name</key>
            <string>variable.language.dw</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\(\s*([a-zA-Z][a-zA-Z0-9]*)\s*\)</string>
            <key>name</key>
            <string>entity.name.type.dw</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([a-zA-Z][a-zA-Z0-9]*)</string>
            <key>name</key>
            <string>meta.object.member.dw</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\?</string>
            <key>name</key>
            <string>keyword.operator.optional.dw</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\*</string>
            <key>name</key>
            <string>keyword.operator.optional.dw</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\@\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.attributes.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.attributes.dw</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#object-member-type</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.declaration.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=,|}|\)|\|}|\-}|\|\-})</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>([^\s])</string>
            <key>name</key>
            <string>invalid</string>
          </dict>
        </array>
      </dict>
      <key>type-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.type.dw</string>
        <key>begin</key>
        <string>(\s*(type)\s+([a-zA-Z][a-zA-Z0-9]*))</string>
        <key>end</key>
        <string>(?=(fun|input|output|type|var|ns|import|%dw|private|---)\s|(\@[a-zA-Z][a-zA-Z0-9]*))</string>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>&lt;</string>
            <key>end</key>
            <string>&gt;</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#generics</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.dw</string>
            <key>match</key>
            <string>\=</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
        </array>
      </dict>
      <key>import-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.import.dw</string>
        <key>begin</key>
        <string>(\s*(import)\s+)</string>
        <key>end</key>
        <string>(?=(fun|input|output|type|var|ns|import|%dw|private|---)\s|$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(,)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\*)</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(from)\s+</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.dw</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:[a-zA-Z][a-zA-Z0-9]*(?:::[a-zA-Z][a-zA-Z0-9]*)*)
</string>
            <key>name</key>
            <string>entity.name.other.dw</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\s+(as)\s+([a-zA-Z][a-zA-Z0-9]*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.dw</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.other.dw</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>var-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.var.dw</string>
        <key>begin</key>
        <string>(\s*(var)\s+([a-zA-Z][a-zA-Z0-9]*))</string>
        <key>end</key>
        <string>(=)</string>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.dw</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>&lt;</string>
            <key>end</key>
            <string>&gt;</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#generics</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.declaration.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?==|$)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comments</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>fun-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.fun.dw</string>
        <key>begin</key>
        <string>(\s*(fun)\s+([a-zA-Z][a-zA-Z0-9_]*|--|\+\+))</string>
        <key>end</key>
        <string>(=)</string>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.dw</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>&lt;</string>
            <key>end</key>
            <string>&gt;</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#generics</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameters</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.declaration.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?==)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>annotation-directive</key>
      <dict>
        <key>name</key>
        <string>meta.directive.annot.dw</string>
        <key>begin</key>
        <string>(\s*(annotation)\s+([a-zA-Z][a-zA-Z0-9]*))</string>
        <key>end</key>
        <string>(?=\n)</string>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.dw</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameters</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>annotation-usage</key>
      <dict>
        <key>name</key>
        <string>meta.annot.usage.dw</string>
        <key>begin</key>
        <string>(\s*(\@)([a-zA-Z][a-zA-Z0-9]*))</string>
        <key>end</key>
        <string>(?=\n)</string>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.type.dw</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.dw</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameters</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>array-literal</key>
      <dict>
        <key>name</key>
        <string>meta.array.literal.dw</string>
        <key>begin</key>
        <string>(?&lt;!\w|}|])(\[)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.dw</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.dw</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>regex</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.regexp.dw</string>
            <key>begin</key>
            <string>(?&lt;=[=(:,\[?+!]|replace|match|scan|matches|contains|---|case|-&gt;|and|or|\*\/)\s*(\/)(?![\/*])(?=(?:[^\/\\\[]|\\.|\[([^\]\\]|\\.)+\])+\/(?![\/*])(?!\s*[a-zA-Z0-9_$]))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(/)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.dw</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.dw</string>
            <key>begin</key>
            <string>(?&lt;![_$[:alnum:])])\/(?![\/*])(?=(?:[^\/\\\[]|\\.|\[([^\]\\]|\\.)+\])+\/(?![\/*])(?!\s*[a-zA-Z0-9_$]))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.dw</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(/)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.dw</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>regexp</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.anchor.regexp</string>
            <key>match</key>
            <string>\\[bB]|\^|\$</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.back-reference.regexp</string>
            <key>match</key>
            <string>\\[1-9]\d*</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.quantifier.regexp</string>
            <key>match</key>
            <string>[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.or.regexp</string>
            <key>match</key>
            <string>\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.group.assertion.regexp</string>
            <key>begin</key>
            <string>(\()((\?=)|(\?!))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.assertion.regexp</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>meta.assertion.look-ahead.regexp</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>meta.assertion.negative-look-ahead.regexp</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.group.regexp</string>
            <key>begin</key>
            <string>\((\?:)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.capture.regexp</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.other.character-class.set.regexp</string>
            <key>begin</key>
            <string>(\[)(\^)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.regexp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.negation.regexp</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\])</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.regexp</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.other.character-class.range.regexp</string>
                <key>match</key>
                <string>(?:.|(\\(?:[0-7]{3}|x\h\h|u\h\h\h\h))|(\\c[A-Z])|(\\.))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x\h\h|u\h\h\h\h))|(\\c[A-Z])|(\\.))</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.numeric.regexp</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.control.regexp</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.escape.backslash.regexp</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.numeric.regexp</string>
                  </dict>
                  <key>5</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.control.regexp</string>
                  </dict>
                  <key>6</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.escape.backslash.regexp</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex-character-class</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex-character-class</string>
          </dict>
        </array>
      </dict>
      <key>regex-character-class</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.other.character-class.regexp</string>
            <key>match</key>
            <string>\\[wWsSdDtrnvf]|\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.numeric.regexp</string>
            <key>match</key>
            <string>\\([0-7]{3}|x\h\h|u\h\h\h\h)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.control.regexp</string>
            <key>match</key>
            <string>\\c[A-Z]</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.escape.backslash.regexp</string>
            <key>match</key>
            <string>\\.</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>